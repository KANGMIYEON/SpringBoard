<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
  <mapper namespace="com.ezen.myProject.repository.BoardDAO"> <!-- 이곳에서 지시하는 인터페이스의 메서드를 ID로 쓰겠다 -->
  <!-- id BoardDAO 에서 가져옴 -->
  
	  <insert id="insertBoard" parameterType="com.ezen.myProject.domain.BoardVO">
	  	insert into board(title, writer, content)
	  	values (#{title}, #{writer}, #{content})
	  </insert> 
	  
	  <select id="selectBoardList" resultType="com.ezen.myProject.domain.BoardVO">
	  	select * from board where isDel = "N"
	  </select>
	  
	  <select id="selectBoardOne" resultType="com.ezen.myProject.domain.BoardVO">
	  	select * from board where bno = #{bno}
	  </select>
	  
	  <update id="readCount">
	  	update board set read_count = read_count + 1 where bno = #{bno}
	  </update>
	  
	  <update id="updateBoard">
	  	update board set title = #{title}, content = #{content}
	  	where bno = #{bno}
	  </update>
	  
	  <update id="deleteBoard">
	  	update board set isDel = "Y"
	  	where bno = #{bno}
	  </update>
	  
	<!--   <select id="selectBoardListPaging" resultType="com.ezen.myProject.domain.BoardVO">
	  	select * from board where isDel = "N" order by bno desc limit #{pageStart}, #{qty}
	  </select> -->
	  
	  <select id="selectBoardListPaging" resultType="com.ezen.myProject.domain.BoardVO">
	  	select * from board where isDel = "N" 
	  	<include refid="search"></include>
	  	order by bno desc limit #{pageStart}, #{qty}
	  </select>
	  
	  <!-- <select id="selectCount" resultType="int">
	  	select count(bno) from board
	  	where isDel = "N"
	  </select> -->
	  
	  
	  <select id="selectCount" resultType="int">
	  	select count(bno) from board
	  	where isDel = "N"
	  </select>
	  
	  <select id="searchCount" resultType="int">
	  	select count(bno) from board
	  	where isDel = "N"
	  	<include refid="search"></include>
	  </select>
	  
	  <select id="selectOneBno" resultType="int">
	  	select max(bno) from board
	  </select>
	  
	  <sql id="search">
	  	<if test="type != null">
	  		<trim prefix="and (" suffix=")" prefixOverrides="OR"> <!-- and() 넣어주고 OR 제외 -->
	  			<foreach collection="typeToArray" item="type">
	  				<trim prefix="OR"> <!-- 여기 이 OR ~ -->
	  					<choose>
	  						<when test="type == 't'.toString()">
	  							title like concat('%', #{keyword}, '%')
	  						</when>
	  						<when test="type == 'c'.toString()">
	  							content like concat('%', #{keyword}, '%')
	  						</when>
	  						<when test="type == 'w'.toString()">
	  							writer like concat('%', #{keyword}, '%')
	  						</when>
	  					</choose>
	  				</trim>
	  			</foreach>
	  		</trim>
	  	</if>
	  </sql>
  
  </mapper>